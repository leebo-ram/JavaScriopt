자바스크립트(JavaScript)

최초의 브라우저 : 모자이크

네비게이터(넷스케이프) : Brenden Erich에 의해 10일만에 모카 언어 -> 라이브 스크립트 -> 자바스크립트

자바스크립트
- 웹의 동작을 구현하기 위한 언어
- 웹 브라우저에서 사용(단 node.js, react native..등 브라우저 밖에서 사용)
- 웹 브라우저에는 자바스크립트 엔진(인터프리터)가 내장되어 있음
- HTML문서 내에서 <script> ~ </script> 태그 안에 작성
- 대소문자를 구별
- 객체 기반의 스크립트 언어
//! 자바와 자바스크립트는 완전히 다른 언어이다! (네이밍만 따라한것.)


자바스크립트의 출력
1. document.write() 함수를 통해 <body> 출력
2. console.log() 함수를 통해 브라우저 console창에 출력

외부 자바스크립트 파일로 적용
<script src="자바스크립트 파일 경로"></script>

* 자바스크립트 파일은 .js 확장명을 사용합니다.

자바스크립트의 주석
// : 한 줄 주석
/* */ : 여러줄 주석


변수(Variable)
변수란 데이터를 저장할 수 있는 메모리 공간을 의미합니다. 값이 변경될 수 있으며, let 키워드를 사용하여 변수를 선언하고 선언되지 않은 변수를 사용하려고 하거나 접근하려고 하면 오류가 발생합니다. 

let 변수명;         // 변수의 선언
let num;

변수명 = 값;        // 변수의 초기화
num = 10;

console.log(num);   // 출력


* let
ECMA Script6 부터 변수 선언을 위해 만들어진 키워드(기존 변수 생성은 var)

* var를 쓰지 않는 이유
1. 같은 이름의 변수를 선언할 수 있음
2. 지역변수와 전역변수의 구별이 없음

* use strict
strict mode 사용을 한다는 의미이며, 자바스크립트 문법을 엄격한 모드로 사용하게 함.

<script>
    'use strict' // 선언문

</script>


상수(constant)
한번 선언된 상수는 다시 재정의 할 수 없으며, 값을 재할당 할 수 없습니다. 

const 상수명 = 값;
const num = 10;

자바스크립트 참고 사이트
https://developer.mozilla.org/ko/docs/Web/JavaScript


자바스크립트의 데이터 타입
(타입이란 프로그램에서 다룰 수 있는 값의 종류를 의미)

1. 숫자형(number)
자바스크립트는 다른 언어와 달리 정수와 실수를 따로 구분하지 않습니다. 모든 수를 실수 하나로만 표현합니다.

10/3 = 3.33333

2. 문자열형(string)
자바스크립트에서는 문자열을 쌍따옴표 또는 따옴표로 둘러싸인 문자의 집합을 의미합니다.

let str = "문자";

const str1 = "류정원 : '여러분 안녕하세요!'"; -> 류정원 : '여러분 안녕하세요!'
const str2 = '류정원 : "여러분 안녕하세요!"'; -> 류정원 : "여러분 안녕하세요!"
const str3 = "\"안녕하세요. \n자바스크립트\""; -> 
"안녕하세요.
자바스크립트"
const str4 = `자바스크립트에서는 문자열을 쌍따옴표나 따옴표로 
    둘러싸인 문자의 집합을 의미합니다.`;

자바스크립트에서는 문자열을 쌍따옴표나 따옴표로 
    둘러싸인 문자의 집합을 의미합니다.   

const str4 = "안녕하세요.";
const str5 = "여러분 " + str4 + " 반갑습니다.";
const str6 = `여러분 ${str4} 반갑습니다.`;

3. 불리언형(boolean)
참(true)과 거짓(false)으로 표현되는 값입니다.

const b = true;

* 값이 있는 경우 모두 참이라고 저장하며, 0 또는 값이 없는 경우는 거짓이라고 저장합니다.
if("안녕") {     //참

}

if("") {        //거짓

}

if("0") {       //거짓

}

--------------------------------------------------------------------------------
memo_2021-02-01

4. undefined, null 형
undefined란 "타입"이 정해지지 않은 형을 의미합니다.(변수 선언 후 값이 정해ㅈ지 않았을 경우) null은 object 타입이며 아직 "값"이 정해지지 않은 것을 의미합니다.

let num;
console.log(num);

let obj = {};   // 데이터가 없어서 null 으로 출력하게됨.
console.log(obj);

let a = 값;
let a = [값, 값, 값 ..]; (배열)
let a = {값, 값, 값 ..}; (사용자 객체)

let a = null;   // 객체 타입의 값이 정해지지 않은 경우


5. 심볼형(Symbol)
ECMA Script6에서 추가된 데이터 타입입니다. 유일하고 변경 불가능한 기본값을 만듭니다. 객체 속성의 key값으로 사용할 수 있습니다.

const sym1 = Symbol('a');
const sym2 = Symbol('a');
console.log(sym1 == sym2);        // false

const sym3 = Symbol();
const sym4 = sym3;
console.log(sym3 == sym4);        // 값과 타입이 모두 같을 경우 true


let a = 10;
let b = 10;
console.log(a == b);        // true


6. 객체형(Object)
여러 속성을 하나의 변수에 저장할 수 있도록 해주는 데이터타입입니다.
(key / value pair 구조로 저장)

let user = {"userid" : "apple", "name":"김사과"};
            -------    -------   
              key       value

let user = new Object();
user = { ... };

